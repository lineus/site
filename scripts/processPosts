#!/usr/bin/env node
'use strict';

const pug = require('pug');
const fn = pug.compileFile('includes/postTemplate.pug');
const makeLS = pug.compileFile('includes/ls.pug');
const md = require('marked');
const { readdir, readFile, writeFile } = require('fs').promises;

const inDir = './posts/';
const outDir = './docs/posts/';
const lsOut = './docs/ls.html';

run();

async function run() {
  const mdFiles = await getMDs(inDir);
  const files = mdFiles.map(f => {
    return {
      in: `${inDir}${f}`,
      out: `${outDir}${f.replace(/\.md$/, '.html')}`,
      title: `${f.replace(/\.md$/, '').replace(/_/g, ' ')}`
    };
  });

  for (let file of files) {
    await process(file);
  }

  const lsHTML = makeLS({ posts: files.map(f => f.out)});
  await writeFile(lsOut, lsHTML);
}

async function getMDs(dir) {
  const files = await readdir(dir);
  return files.filter(f => /\.md$/.test(f));
}

async function process(file) {
  let contents = await readFile(file.in, 'utf-8');
  let blargh = fn({ title: file.title, post: md(contents) });
  await writeFile(file.out, blargh);
}
